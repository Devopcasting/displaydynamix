// src/ai/flows/suggest-layout.ts
'use server';

/**
 * @fileOverview This file defines a Genkit flow for suggesting template layouts based on provided elements and design preferences.
 *
 * The flow takes template elements and design preferences as input and returns layout suggestions generated by an AI model.
 *
 * @interface SuggestLayoutInput - The input type for the suggestLayout function, including template elements and design preferences.
 * @interface SuggestLayoutOutput - The output type for the suggestLayout function, providing suggested layout configurations.
 *
 * @function suggestLayout - The main function to trigger the layout suggestion flow.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const SuggestLayoutInputSchema = z.object({
  elements: z.array(z.string()).describe('List of template elements (e.g., text box, image, video).'),
  designPreferences: z.string().describe('Design preferences or style guidelines for the layout.'),
});
export type SuggestLayoutInput = z.infer<typeof SuggestLayoutInputSchema>;

const SuggestLayoutOutputSchema = z.object({
  layoutSuggestions: z.array(z.string()).describe('Suggested layout configurations as descriptions.'),
});
export type SuggestLayoutOutput = z.infer<typeof SuggestLayoutOutputSchema>;

export async function suggestLayout(input: SuggestLayoutInput): Promise<SuggestLayoutOutput> {
  return suggestLayoutFlow(input);
}

const suggestLayoutPrompt = ai.definePrompt({
  name: 'suggestLayoutPrompt',
  input: {schema: SuggestLayoutInputSchema},
  output: {schema: SuggestLayoutOutputSchema},
  prompt: `You are an AI assistant specialized in providing layout suggestions for digital signage templates.
  Given the template elements and design preferences, generate optimal layout suggestions.

  Template Elements: {{elements}}
  Design Preferences: {{designPreferences}}

  Provide layout suggestions as descriptions of layout configurations.
  The layout suggestions should be very concise and focus on the positioning of each element to maximize visual appeal.
  Each element is an instruction for the element to follow, such as 'image - top left, resize to 20% of the canvas'.
  Try to vary the output between different calls to this prompt.
  Do not repeat a description from a previous generation.`, 
});

const suggestLayoutFlow = ai.defineFlow(
  {
    name: 'suggestLayoutFlow',
    inputSchema: SuggestLayoutInputSchema,
    outputSchema: SuggestLayoutOutputSchema,
  },
  async input => {
    const {output} = await suggestLayoutPrompt(input);
    return output!;
  }
);
